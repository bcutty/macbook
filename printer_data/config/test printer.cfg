[include mainsail.cfg]
#[include fluidd.cfg]
#[include stealthburner_leds.cfg]
#[include PIS.cfg]

# This file contains pin mappings for the Voxelab Aquila with
# N32G452 on the 1.0.1 mainboard. To use this config, during
# "make menuconfig" select the stm32f103, 28KB boot, serial
# PA9/PA10 and N32G45x option.
# See docs/Config_Reference.md for a description of parameters.

#[neopixel board_rgb]
#pin: eboard:gpio24
#chain_count: 3
#color_order: GRB
#initial_RED: 0.3
#initial_GREEN: 0.3
#initial_BLUE: 0.3

[input_shaper]
shaper_freq_x: 56.2
shaper_type_x: mzv
shaper_freq_y: 43.2
shaper_type_y: mzv

[temperature_sensor klipper_book]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[exclude_object]

[stepper_x]
step_pin: PC2
dir_pin: PB9
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA5
position_endstop: -28
position_min: -28
position_max: 235
homing_speed: 50

[stepper_y]
step_pin: PB8
dir_pin: PB7
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA6
position_endstop: -30
position_min: -30
position_max: 235
homing_speed: 50

[stepper_z]
step_pin: PB6
dir_pin: !PB5
enable_pin: !PC3
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop #^PA7
#position_endstop: 0.0
position_max: 250
position_min: -10

[stepper_z1]
step_pin: PB4
dir_pin: !PB3
enable_pin: !PC3
microsteps: 16
rotation_distance: 8

[bltouch]
sensor_pin: ^PB1
control_pin: PB0
x_offset: -39
y_offset: 0
samples: 1
speed: 2
#z_offset: 0.0

[safe_z_home]
home_xy_position: 117.5, 117.5
speed: 50
z_hop: 10
z_hop_speed: 5

[bed_mesh]
speed: 80
horizontal_move_z: 5
mesh_min: 10, 25
mesh_max: 168, 210
probe_count: 5, 5

[z_tilt]
z_positions:
    0,117.5
    235,117.5
points:
    50,117.5
    212, 117.5
speed: 100
horizontal_move_z: 5
retries: 20
retry_tolerance: 0.01

[extruder]
max_extrude_only_distance: 110.0
step_pin: eboard:gpio14
dir_pin: !eboard:gpio13
enable_pin: !eboard:gpio15
microsteps: 16
rotation_distance: 1.618
nozzle_diameter: 0.600
filament_diameter: 1.750
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC5
#control: pid
# tuned for stock hardware with 200 degree Celsius target
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 300

[tmc2209 extruder]
uart_pin: eboard:gpio9
tx_pin: eboard:gpio8
uart_address: 0
run_current: 0.750
stealthchop_threshold: 999999

[heater_bed]
heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
#control: pid
# tuned for stock hardware with 50 degree Celsius target
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0
max_temp: 130

[heater_fan hotend_fan]
pin: eboard:gpio18
heater: extruder
heater_temp: 50

[heater_fan controller_fan]
pin: eboard:gpio20
heater: heater_bed
heater_temp: 4

[fan]
pin: PA0

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[mcu eboard]
#skr pico handling extruder
serial: /dev/serial/by-id/usb-Klipper_rp2040_455035712791B0E8-if00

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 10000
max_accel_to_decel: 10000
max_z_velocity: 5
max_z_accel: 100


[gcode_macro START_PRINT]

gcode:
    G92 E0 # Reset Extruder
    G28 # Home all axes
    BED_MESH_PROFILE LOAD=default
    G1 Z2.0 F3000 # Move Z Axis up little to prevent scratching of Heat Bed
    G1 X5.1 Y20 Z0.3 F5000.0 # Move to start position
    G1 X5.1 Y200.0 Z0.3 F1500.0 E15 # Draw the first line
    G1 X5.4 Y200.0 Z0.3 F5000.0 # Move to side a little
    G1 X5.4 Y20 Z0.3 F1500.0 E30 # Draw the second line
    G92 E0 # Reset Extruder
    G1 Z2.0 F3000 # Move Z Axis up little to prevent scratching of Heat Bed
    G1 X10 Y20 Z0.3 F5000.0 # Move over to prevent blob squish

[gcode_macro END_PRINT]

gcode:
    G91 ;Relative positioning
    G1 E-2 F2700 ;Retract a bit
    G1 E-2 Z0.2 F2400 ;Retract and raise Z
    G1 X5 Y5 F3000 ;Wipe out
    G1 Z10 ;Raise Z more
    G90 ;Absolute positioning
    G1 X0 Y210 ;Present print
    M106 S0 ;Turn-off fan
    M104 S0 ;Turn-off hotend
    M140 S0 ;Turn-off bed
    M84 X Y E ;Disable all steppers but Z

[gcode_macro M600]

gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    SET_IDLE_TIMEOUT TIMEOUT=7200
    RESTORE_GCODE_STATE NAME=M600_state


[gcode_macro TEST_SPEED]
gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

    {% for i in range(iterations) %}
        # Large pattern
            # Diagonals
            G0 X{x_min} Y{y_min} F{speed*60}
            G0 X{x_max} Y{y_max} F{speed*60}
            G0 X{x_min} Y{y_min} F{speed*60}
            G0 X{x_max} Y{y_min} F{speed*60}
            G0 X{x_min} Y{y_max} F{speed*60}
            G0 X{x_max} Y{y_min} F{speed*60}
            
            # Box
            G0 X{x_min} Y{y_min} F{speed*60}
            G0 X{x_min} Y{y_max} F{speed*60}
            G0 X{x_max} Y{y_max} F{speed*60}
            G0 X{x_max} Y{y_min} F{speed*60}
        
        # Small pattern
            # Small diagonals 
            G0 X{x_center_min} Y{y_center_min} F{speed*60}
            G0 X{x_center_max} Y{y_center_max} F{speed*60}
            G0 X{x_center_min} Y{y_center_min} F{speed*60}
            G0 X{x_center_max} Y{y_center_min} F{speed*60}
            G0 X{x_center_min} Y{y_center_max} F{speed*60}
            G0 X{x_center_max} Y{y_center_min} F{speed*60}
            
            # Small box
            G0 X{x_center_min} Y{y_center_min} F{speed*60}
            G0 X{x_center_min} Y{y_center_max} F{speed*60}
            G0 X{x_center_max} Y{y_center_max} F{speed*60}
            G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 

    # Re-home and get position again for comparison:
        G28
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 19.686
#*# pid_ki = 0.820
#*# pid_kd = 118.118
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 71.551
#*# pid_ki = 1.329
#*# pid_kd = 963.249
#*#
#*# [bltouch]
#*# z_offset = 1.700
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.145000, -0.050000, -0.080000, -0.122500, -0.152500
#*# 	-0.085000, -0.010000, -0.020000, -0.090000, -0.167500
#*# 	-0.037500, 0.035000, 0.057500, -0.010000, -0.120000
#*# 	-0.077500, 0.027500, 0.042500, -0.057500, -0.130000
#*# 	-0.080000, -0.015000, -0.005000, -0.095000, -0.152500
#*# tension = 0.2
#*# min_x = 10.0
#*# algo = lagrange
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 25.0
#*# x_count = 5
#*# max_y = 210.0
#*# mesh_x_pps = 2
#*# max_x = 168.0
